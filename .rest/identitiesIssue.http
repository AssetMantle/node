POST http://{{ASSET_MANTLE_CLIENT_HOST}}:{{ASSET_MANTLE_CLIENT_PORT}}/identities/issue
Content-Type: application/json

{
"type": "/xprt/identities/github.com/AssetMantle/modules/modules/identities/internal/transactions/issue/transactionRequest",
 "value": {
    "baseReq": {
      "from": "{{ACCOUNT_1_ADDRESS}}",
      "chain_id": "{{CHAIN_ID}}"
    },
    "fromID": "test.MgVN53MovlOXmVrFOb6Rk8efEho=|Hi4ALDaDs923R0w64cr02MffbNA=",
    "classificationID":"test.UmQ7cvtwX3GGpbh7MpEf2-S6JiU=",
    "to": "cosmos14th3gcu50q778wal7fug8h5hf07l8t8dzulghf",
    "immutableMetaProperties":"ImmutableMetaPropertyName1:S|ImmutableMetaPropertyValue1,ImmutableMetaPropertyName2:I|ImmutableMetaPropertyValue2",
    "immutableProperties":"ImmutablePropertyName3:H|100,ImmutablePropertyName4:D|0.1010",
    "mutableMetaProperties":"MutableMetaPropertyName5:S|MutableMetaPropertyValue5,MutableMetaPropertyName6:S|MutableMetaPropertyValue6,burn:H|10,lock:H|20",
    "mutableProperties":"MutablePropertyName7:S|MutablePropertyValue7,MutablePropertyName8:S|MutablePropertyValue8"
 }
}

> {%
   client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
   client.global.set("identitiesIssueTxHash", JSON.parse(JSON.stringify(response.body)).txhash)

%}

###
GET http://{{ASSET_MANTLE_CLIENT_HOST}}:{{ASSET_MANTLE_CLIENT_PORT}}/txs/{{identitiesIssueTxHash}}
Accept: application/json

> {%
   client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
   client.test("Response Code Check", function() {
        client.assert(!JSON.parse(JSON.stringify(response.body)).hasOwnProperty("code") , "Response Code is not 0");
    });
%}

###