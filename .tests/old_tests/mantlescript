#!/usr/bin/env bash

setup() {
  rm -rf $HOME/.AssetMantle/Node/
  assetNode init test --chain-id load-test-1
  assetNode add-genesis-account test 10000000000000000000000stake --keyring-backend test
  assetNode gentx --name test --amount 1000000000stake --keyring-backend test
  assetNode collect-gentxs
  systemctl restart mantle-node.service
  systemctl restart mantle-client.service
}

keysAdd(){
  assetClient keys add test --keyring-backend test
  assetClient keys add test2 --keyring-backend test
}

keysRemove(){
  rm -rf /root/.AssetMantle/Client/
}

txNubID() {
  assetClient tx identities nub --from test --nubID $1 --chain-id load-test-1 --keyring-backend test --yes
}

txDefineID() {
  assetClient tx identities define --immutableProperties "testImmutable1:S|testMutableMeta1" --immutableMetaProperties "testImmutableMeta1:S|testImmutableMeta1234" --mutableProperties "testMutable1:S|testMutableMeta1" --mutableMetaProperties "testMutableMeta1:S|testMutableMeta1" --from=test --fromID "$1" --chain-id load-test-1 --keyring-backend test --yes
}

txIssueID() {
  # $1 = classificationID|hshID ; $2 = load-test-1.hashID (class)
  assetClient tx identities issue --immutableProperties "testImmutable1:S|testMutableMeta1" --immutableMetaProperties "testImmutableMeta1:S|testImmutableMeta1234" --mutableProperties "testMutable1:S|testMutableMeta1" --mutableMetaProperties "testMutableMeta1:S|testMutableMeta1" --from=test --fromID "$1" --classificationID "$2" --to=mantle1v74ehyjesvek5ugjsfmw4jz3cxrldcrulm4avr --chain-id load-test-1 --keyring-backend test --yes
}

txProvision() {
  # $1 = classificationID|hashID
  assetClient tx identities provision --from=test --to=$(assetClient keys show test2 --address --keyring-backend test) --identityID "$1" --chain-id load-test-1 --keyring-backend test --yes
}

txUnProvision() {
  # $1 = classificationID|hashID
  assetClient tx identities unprovision --from=test --to=$(assetClient keys show test2 --address --keyring-backend test) --identityID "$1" --chain-id load-test-1 --keyring-backend test --yes
}

txMetaReveal() {
  assetClient tx metas reveal --from=test --data "S|testMeta1" --keyring-backend test --chain-id load-test-1
}

txAssetDefine() {
  # $1 = classificationID|hashID
  assetClient tx assets define --from=test --fromID "$1" --immutableProperties "immutable:S|Properties" --immutableMetaProperties "immutableMeta:S|Properties" --mutableProperties "mutable:S|Properties" --mutableMetaProperties "mutableMeta:S|Properties" --keyring-backend test --chain-id "load-test-1"
}

txAssetMint() {
  assetClient tx assets mint --from=test --fromID "$1" --classificationID "$2" --toID "$3" --immutableProperties "immutable:S|Properties" --immutableMetaProperties "immutableMeta:S|Properties" --mutableProperties "mutable:S|Properties" --mutableMetaProperties "mutableMeta:S|Properties" --keyring-backend test --chain-id "load-test-1"
}

qid() {
  assetClient query identities identities
}

qclass() {
  assetClient query classifications classifications
}

qtx() {
  assetClient query tx $1 --chain-id load-test-1 --trust-node
}

jnode() {
  journalctl -fu mantle-node.service
}

jclient() {
  journalctl -fu mantle-client.service
}
